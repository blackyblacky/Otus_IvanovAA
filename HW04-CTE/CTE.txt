
USE WideWorldImporters

/*
1. Выберите сотрудников (Application.People), которые являются продажниками (IsSalesPerson), 
и не сделали ни одной продажи 04 июля 2015 года. 
Вывести ИД сотрудника и его полное имя. 
Продажи смотреть в таблице Sales.Invoices.
*/

select PersonID, FullName
from Application.People
where PersonID in (select SalespersonPersonID
						from Sales.Invoices
						where InvoiceDate <> '20150704')

/*
2. Выберите товары с минимальной ценой (подзапросом). Сделайте два варианта подзапроса. 
Вывести: ИД товара, наименование товара, цена.
*/

select top(1) StockItemID, StockItemName, UnitPrice
from Warehouse.StockItems
where exists (select min(UnitPrice) from Warehouse.StockItems)
order by UnitPrice

select StockItemID, StockItemName, UnitPrice
from Warehouse.StockItems
where UnitPrice in (select min(UnitPrice) from Warehouse.StockItems)

select StockItemID, StockItemName, UnitPrice
from Warehouse.StockItems
where UnitPrice <= all (select UnitPrice from Warehouse.StockItems)

/*
3. Выберите информацию по клиентам, которые перевели компании пять максимальных платежей 
из Sales.CustomerTransactions. 
Представьте несколько способов (в том числе с CTE). 
*/
select top(5) c.CustomerName, t.TransactionAmount
from Sales.CustomerTransactions t
join Sales.Customers c
on c.CustomerID = t.CustomerID
order by t.TransactionAmount desc

select CustomerName
from Sales.Customers
where CustomerID in (select top(5) CustomerID
					from Sales.CustomerTransactions
					order by TransactionAmount desc)

with maxamountCTE as
(select top(5) CustomerID, TransactionAmount
 from Sales.CustomerTransactions
 order by TransactionAmount desc)
select c.CustomerID, c.CustomerName
from Sales.Customers as c
join maxamountCTE as m
on m.CustomerID = c.CustomerID


/*
4. Выберите города (ид и название), в которые были доставлены товары, 
входящие в тройку самых дорогих товаров, а также имя сотрудника, 
который осуществлял упаковку заказов (PackedByPersonID).
*/
with pCTE as 
(
select  top(3) StockItemID,StockItemName, unitprice
from Warehouse.StockItems
order by UnitPrice desc
)
select c.CityID, c.CityName, i.PackedByPersonID
from Application.Cities c
join Sales.Customers ct
on ct.DeliveryCityID = c.CityID
join Sales.Invoices i
on i.CustomerID = ct.CustomerID
join Sales.InvoiceLines il
on il.InvoiceID = i.InvoiceID
join pCTE 
on pCTE.StockItemID = il.StockItemID

-- ---------------------------------------------------------------------------
-- Опциональное задание
-- ---------------------------------------------------------------------------
-- Можно двигаться как в сторону улучшения читабельности запроса, 
-- так и в сторону упрощения плана\ускорения. 
-- Сравнить производительность запросов можно через SET STATISTICS IO, TIME ON. 
-- Если знакомы с планами запросов, то используйте их (тогда к решению также приложите планы). 
-- Напишите ваши рассуждения по поводу оптимизации. 

-- 5. Объясните, что делает и оптимизируйте запрос
SET STATISTICS IO, TIME ON
SELECT 
	Invoices.InvoiceID, 
	Invoices.InvoiceDate,
	(SELECT People.FullName
		FROM Application.People
		WHERE People.PersonID = Invoices.SalespersonPersonID
	) AS SalesPersonName,
	SalesTotals.TotalSumm AS TotalSummByInvoice, 
	(SELECT SUM(OrderLines.PickedQuantity*OrderLines.UnitPrice)
		FROM Sales.OrderLines
		WHERE OrderLines.OrderId = (SELECT Orders.OrderId 
			FROM Sales.Orders
			WHERE Orders.PickingCompletedWhen IS NOT NULL	
				AND Orders.OrderId = Invoices.OrderId)	
	) AS TotalSummForPickedItems
FROM Sales.Invoices 
	JOIN
	(SELECT InvoiceId, SUM(Quantity*UnitPrice) AS TotalSumm
	FROM Sales.InvoiceLines
	GROUP BY InvoiceId
	HAVING SUM(Quantity*UnitPrice) > 27000) AS SalesTotals
		ON Invoices.InvoiceID = SalesTotals.InvoiceID
ORDER BY TotalSumm DESC

-- --

TODO: напишите здесь свое решение
