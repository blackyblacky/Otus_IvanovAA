create database MarketPlace -- Создание БД
GO
--Создание Схем
CREATE SCHEMA [Sales]
GO

CREATE SCHEMA [Warehouse]
GO

CREATE SCHEMA [Directory]
GO

--Создание Таблиц
CREATE TABLE Sales.Buyers (
    IDBuyer INT IDENTITY(1,1) PRIMARY KEY,
    FullName VARCHAR(50) not null,
    Email VARCHAR(50),
    PhoneNumber VARCHAR(20) not null,
    Address VARCHAR(100) not null
);

CREATE TABLE Sales.Sellers (
    IDSeller INT IDENTITY(1,1) PRIMARY KEY,
    FullNameseller VARCHAR(50) not null,
    Email VARCHAR(50) not null,
    PhoneNumber VARCHAR(20) not null,
    Address VARCHAR(100) not null,
	BankNumber varchar(30) not null
);

CREATE TABLE Directory.Category (
	IDCategory INT PRIMARY KEY,
	CategoryName varchar(50) not null
);

CREATE TABLE Warehouse.Products (
    IDProduct INT IDENTITY(1,1) PRIMARY KEY,
    Article VARCHAR(50) not null,
    Descr VARCHAR(100) not null,
	IDCategory int,
    Price numeric(18, 2) not null,
    Qty INT not null,
	FOREIGN KEY (IDCategory) REFERENCES Directory.Category(IDCategory),
);

CREATE TABLE Directory.Delivery (
    IDDelivery INT IDENTITY(1,1) PRIMARY KEY,
    DeliveryAddress VARCHAR(100) not null,
    DeliveryCost numeric(18, 2) not null
);



CREATE TABLE Directory.Payments (
    IDPayment INT IDENTITY(1,1) PRIMARY KEY,
    PaymentMethod VARCHAR(20) not null,
);

CREATE TABLE Sales.Baskets (
    IDBasket INT IDENTITY(1,1) PRIMARY KEY,
    IDBuyer INT,
    IDProduct INT,
    Qty INT not null,
    FOREIGN KEY (IDBuyer) REFERENCES Sales.Buyers(IDBuyer),
    FOREIGN KEY (IDProduct) REFERENCES Warehouse.Products(IDProduct)
);

CREATE TABLE Directory.Status (
	IDStatus INT IDENTITY(1,1) PRIMARY KEY,
	StatusName varchar(50)
);

CREATE TABLE Sales.Orders (
    IDOrder INT IDENTITY(1,1) PRIMARY KEY,
    OrderDate datetime2(7) not null,
    IDBuyer INT,
    IDSeller INT,
    IDProduct INT,
	Status int,
    Qty INT,
    IDDelivery INT,
    IDPayment INT,
    IDBasket INT,
    FOREIGN KEY (IDBuyer) REFERENCES Sales.Buyers(IDBuyer),
    FOREIGN KEY (IDSeller) REFERENCES Sales.Sellers(IDSeller),
    FOREIGN KEY (IDProduct) REFERENCES Warehouse.Products(IDProduct),
    FOREIGN KEY (IDDelivery) REFERENCES Directory.Delivery(IDDelivery),
    FOREIGN KEY (IDPayment) REFERENCES Directory.Payments(IDPayment),
    FOREIGN KEY (IDBasket) REFERENCES Sales.Baskets(IDBasket),
	FOREIGN KEY (Status) REFERENCES Directory.Status(IDStatus)
);

CREATE TABLE Sales.Reviews (
	IDReview INT IDENTITY(1,1) PRIMARY KEY,
	TextReview nvarchar(100),
	Rating INT not null,
	IDOrder INT,
	IDProduct INT,
	IDBuyer INT,
	FOREIGN KEY (IDBuyer) REFERENCES Sales.Buyers(IDBuyer),
	FOREIGN KEY (IDOrder) REFERENCES Sales.Orders(IDOrder),
	FOREIGN KEY (IDProduct) REFERENCES Warehouse.Products(IDProduct)
);
--Создание Индексов

CREATE INDEX idx_article ON Warehouse.Products (Article);

CREATE INDEX idx_email ON Sales.Buyers (Email);

CREATE INDEX idx_flname ON Sales.Sellers (FullNameseller);

--Создание ограничений
ALTER TABLE Sales.Buyers
ADD Constraint c_email UNIQUE(Email);

ALTER TABLE Sales.Sellers
ADD CONSTRAINT s_email UNIQUE(Email);

ALTER TABLE Sales.Buyers 
ADD CONSTRAINT phone_number_constraint 
CHECK (Phonenumber LIKE '[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]');

ALTER TABLE Sales.Sellers 
ADD CONSTRAINT pn_constraint 
CHECK (Phonenumber LIKE '[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]')